@model List<CartifyBLL.ViewModels.Product.ProductDTO>
@using System.Globalization
@{
    ViewData["Title"] = "Store";
    var categories = ViewBag.Categories as IEnumerable<dynamic> ?? new List<dynamic>();
    var selectedCategory = ViewBag.SelectedCategory as int?;
    var searchTerm = ViewBag.SearchTerm as string ?? "";
    var currentPage = ViewBag.CurrentPage != null ? (int)ViewBag.CurrentPage : 1;
    var totalPages = ViewBag.TotalPages != null ? (int)ViewBag.TotalPages : 1;
    var pageSize = ViewBag.PageSize != null ? (int)ViewBag.PageSize : 12;
    var totalItems = ViewBag.TotalItems != null ? (int)ViewBag.TotalItems : 0;
    var sort = ViewBag.Sort as string ?? "name";
    var maxPrice = ViewBag.MaxPrice as decimal? ?? 1000m;
    var priceCeiling = ViewBag.PriceCeiling != null ? (int)ViewBag.PriceCeiling : 1000;
}
@section Styles{
    <style>
        <link rel="stylesheet" href="~/css/store.css" >
        <link type="text/css" rel="stylesheet" href="~/css/bootstrap.min.css" / >
        <link type="text/css" rel="stylesheet" href="~/css/slick.css" / >
        <link type="text/css" rel="stylesheet" href="~/css/slick-theme.css" / >
        <link type="text/css" rel="stylesheet" href="~/css/nouislider.min.css" / >
        <link rel="stylesheet" href="~/css/font-awesome.min.css" / >
        <link type="text/css" rel="stylesheet" href="~/css/style.css" / >
    </style>
    
}


<!-- BREADCRUMB -->
<div id="breadcrumb" class="section">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <ul class="breadcrumb-tree">
                    <li><a href="/">Home</a></li>
                    <li><a href="/Store">All Categories</a></li>
                    @if (selectedCategory.HasValue)
                    {
                        var categoryName = categories.FirstOrDefault(c => c.CategoryId == selectedCategory.Value)?.Name ?? "Category";
                        <li><a href="#">@categoryName</a></li>
                    }
                    <li class="active">
                        @if (!string.IsNullOrEmpty(searchTerm))
                        {
                            <span>Search: "@searchTerm" (@totalItems Results)</span>
                        }
                        else
                        {
                            <span>Products (@totalItems Results)</span>
                        }
                    </li>
                </ul>
            </div>
        </div>
    </div>
</div>

<!-- SECTION -->
<div class="section">
    <div class="container">
        @Html.AntiForgeryToken()
        
        <div class="row">
            <!-- ASIDE -->
            <div id="aside" class="col-md-3">
                <!-- Category filter -->
                <div class="aside">
                    <h3 class="aside-title">Categories</h3>
                    <div class="checkbox-filter">
                        <div class="input-checkbox">
                            <input type="radio" id="category-all" name="category" value=""
                                   @(selectedCategory == null ? "checked" : "")
                                   onchange="filterByCategory('')" />
                            <label for="category-all">
                                <span></span> All Categories
                            </label>
                        </div>
                        @foreach (var category in categories)
                        {
                            <div class="input-checkbox">
                                <input type="radio" id="category-@category.CategoryId" name="category"
                                       value="@category.CategoryId"
                                       @(selectedCategory == category.CategoryId ? "checked" : "")
                                       onchange="filterByCategory(@category.CategoryId)" />
                                <label for="category-@category.CategoryId">
                                    <span></span> @category.Name
                                </label>
                            </div>
                        }
                    </div>
                </div>
                <!-- Price filter -->
                <div class="aside">
                    <h3 class="aside-title">Price</h3>
                    <div class="price-filter">
                        <input type="range"
                               id="priceRange"
                               min="0"
                               max="@priceCeiling"
                               step="1"
                               value="@((int)Math.Ceiling(maxPrice))"
                               oninput="updatePriceLabel(this.value)"
                               class="form-range" />
                        <p>Up to: $<span id="priceLabel">@((int)Math.Ceiling(maxPrice))</span></p>
                        <button class="btn btn-primary w-100" onclick="filterByPrice()">Filter</button>
                    </div>
                </div>

                <!-- Top Selling Widget (placeholder) -->
                <div class="aside">
                    <h3 class="aside-title">Top selling</h3>
                    @if (Model != null && Model.Any())
                    {
                        @foreach (var topProduct in Model.Take(3))
                        {
                            <div class="product-widget">
                                <div class="product-img">
                                    <img src="@(string.IsNullOrEmpty(topProduct.ImageUrl) ? "/images/no-image.png" : topProduct.ImageUrl?.Split('|')[0])" alt="@topProduct.Name" />
                                </div>
                                <div class="product-body">
                                    <p class="product-category">@topProduct.Category</p>
                                    <h3 class="product-name">
                                        <a asp-controller="Store" asp-action="Details" asp-route-id="@topProduct.ProductId">@topProduct.Name</a>
                                    </h3>
                                    <h4 class="product-price">
                                        $@topProduct.Price.ToString("F2")
                                    </h4>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
            <!-- /ASIDE -->

            <!-- STORE -->
            <div id="store" class="col-md-9">
                <!-- Store top filter -->
                <div class="store-filter clearfix">
                    <div class="store-sort">
                        <label>
                            Sort By:
                            <select class="input-select" onchange="sortProducts(this.value)">
                                <option value="name" selected="@(sort == "name")">Name</option>
                                <option value="price-asc" selected="@(sort == "price-asc")">Price: Low to High</option>
                                <option value="price-desc" selected="@(sort == "price-desc")">Price: High to Low</option>
                            </select>
                        </label>
                        <label>
                            Show:
                            <select class="input-select" onchange="changePageSize(this.value)">
                                <option value="12" selected="@(pageSize == 12)">12</option>
                                <option value="24" selected="@(pageSize == 24)">24</option>
                                <option value="48" selected="@(pageSize == 48)">48</option>
                            </select>
                        </label>
                    </div>
                </div>
                <!-- Store products -->
                <div class="row">
                    @if (Model != null && Model.Any())
                    {
                        @foreach (var product in Model)
                        {
                            <div class="col-md-4 col-xs-6">
                                <div class="product">
                                    <div class="product-img">
                                    <a asp-controller="Store" asp-action="Details" asp-route-id="@product.ProductId" style="display:block;">
                                            <img src="@(string.IsNullOrEmpty(product.ImageUrl) ? "/images/no-image.png" : product.ImageUrl?.Split('|')[0])" alt="@product.Name" style="width:100%; height:auto;" />
                                        </a>
                                        </div>
                                    <div class="product-body">
                                        <p class="product-category">@product.Category</p>
                                        <h3 class="product-name"><a asp-controller ="Store" asp-action="Details" asp-route-id="@product.ProductId">@product.Name</a></h3>
                                        <h4 class="product-price">$@product.Price.ToString("F2", CultureInfo.InvariantCulture)</h4>
                                        <div class="product-btns">
                                            <button class="add-to-wishlist @(product.InWishlist ? "active" : "")"
                                                    onclick="toggleWishlist(@product.ProductId, this)">
                                                <i class="fa @(product.InWishlist ? "fa-heart" : "fa-heart-o")"></i>
                                            </button>
                                            <button class="quick-view" onclick="quickView(@product.ProductId)">
                                                <i class="fa fa-eye"></i>
                                            </button>
                                        </div>
                                    </div>
                                    <div class="add-to-cart">
                                        @if (product.StockQuantity > 0)
                                        {
                                            <button class="add-to-cart-btn" onclick="addToCart(@product.ProductId)">
                                                <i class="fa fa-shopping-cart"></i> add to cart
                                            </button>
                                        }
                                        else
                                        {
                                            <button class="add-to-cart-btn" disabled>
                                                <i class="fa fa-ban"></i> out of stock
                                            </button>
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="col-12 text-center py-5">
                            <i class="fa fa-search fa-4x text-muted mb-3"></i>
                            <h3>No Products Found</h3>
                        </div>
                    }
                </div>

                <!-- Store bottom filter / Pagination -->
                @if (totalPages > 1)
                {
                    <div class="store-filter clearfix">
                        <span class="store-qty">
                            Showing @((currentPage - 1) * pageSize + 1)-@(Math.Min(currentPage * pageSize, totalItems)) of @totalItems products
                        </span>
                        <ul class="store-pagination">
                            @if (currentPage > 1)
                            {
                                <li><a href="javascript:void(0);" onclick="changePage(@(currentPage - 1))"><i class="fa fa-angle-left"></i></a></li>
                            }
                            @for (int i = 1; i <= totalPages; i++)
                            {
                                if (i == currentPage)
                                {
                                    <li class="active">@i</li>
                                }
                                else
                                {
                                    <li><a href="javascript:void(0);" onclick="changePage(@i)">@i</a></li>
                                }
                            }
                            @if (currentPage < totalPages)
                            {
                                <li><a href="javascript:void(0);" onclick="changePage(@(currentPage + 1))"><i class="fa fa-angle-right"></i></a></li>
                            }
                        </ul>
                    </div>
                }
            </div>
            <!-- /STORE -->
        </div>
        <!-- /row -->
    </div>
    <!-- /container -->
</div>
<!-- /SECTION -->
@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        function getParams() {
            const p = new URLSearchParams(window.location.search);
            return {
                categoryId: p.get("categoryId") || "",
                sort: p.get("sort") || "name",
                pageSize: p.get("pageSize") || "12",
                page: p.get("page") || "1",
                maxPrice: p.get("maxPrice") || ""
            };
        }

        function buildUrl(changes) {
            const p = new URLSearchParams(window.location.search);
            Object.entries(changes).forEach(([k, v]) => {
                if (v === null || v === undefined || v === "") p.delete(k);
                else p.set(k, v);
            });
            return `/Store?${p.toString()}`;
        }

        function applyFilter(changes) {
            const merged = { ...getParams(), ...changes };
            if (!("page" in changes)) merged.page = "1";
            window.location.href = buildUrl(merged);
        }

        function filterByCategory(categoryId) { applyFilter({ categoryId }); }
        function changePageSize(size) { applyFilter({ pageSize: size }); }
        function sortProducts(sortBy) { applyFilter({ sort: sortBy }); }
        function filterByPrice() {
            const max = document.getElementById("priceRange").value;
            applyFilter({ maxPrice: max });
        }
        function changePage(page) { applyFilter({ page: String(page) }); }

        function updatePriceLabel(value) {
            document.getElementById("priceLabel").textContent = value;
        }

        function addToCart(id) {
            fetch('/Cart/AddToCart', {
                method: 'POST',
                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                body: `productId=${id}&quantity=1&__RequestVerificationToken=${document.querySelector('input[name="__RequestVerificationToken"]').value}`
            })
            .then(r => r.json())
            .then(data => {
                Swal.fire({ title: data.success ? 'Added!' : 'Error', text: data.message, icon: data.success ? 'success' : 'error', timer: 1500 });
            });
        }

        function toggleWishlist(id, btn) {
            fetch('/Wishlist/ToggleWishlist', {
                method: 'POST',
                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                body: `productId=${id}&__RequestVerificationToken=${document.querySelector('input[name="__RequestVerificationToken"]').value}`
            })
            .then(r => r.json())
            .then(data => {
                Swal.fire({ title: data.success ? 'Updated!' : 'Error', text: data.message, icon: data.success ? 'success' : 'error', timer: 1500 });
                if (data.success) {
                    const icon = btn.querySelector("i");
                    icon.classList.toggle("fa-heart");
                    icon.classList.toggle("fa-heart-o");
                }
            });
        }

        function quickView(id) {
            Swal.fire({ title: 'Quick View', text: `Details for product ${id}`, icon: 'info' });
        }
    </script>
}